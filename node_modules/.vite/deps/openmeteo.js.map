{
  "version": 3,
  "sources": ["../../flatbuffers/mjs/constants.js", "../../flatbuffers/mjs/utils.js", "../../flatbuffers/mjs/encoding.js", "../../flatbuffers/mjs/byte-buffer.js", "../../flatbuffers/mjs/builder.js", "../../flatbuffers/mjs/flatbuffers.js", "../../@openmeteo/sdk/model.js", "../../@openmeteo/sdk/aggregation.js", "../../@openmeteo/sdk/unit.js", "../../@openmeteo/sdk/variable.js", "../../@openmeteo/sdk/variable-with-values.js", "../../@openmeteo/sdk/variables-with-time.js", "../../@openmeteo/sdk/weather-api-response.js", "../../openmeteo/lib/index.js"],
  "sourcesContent": ["export const SIZEOF_SHORT = 2;\nexport const SIZEOF_INT = 4;\nexport const FILE_IDENTIFIER_LENGTH = 4;\nexport const SIZE_PREFIX_LENGTH = 4;\n", "export const int32 = new Int32Array(2);\nexport const float32 = new Float32Array(int32.buffer);\nexport const float64 = new Float64Array(int32.buffer);\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n", "export var Encoding;\n(function (Encoding) {\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\n})(Encoding || (Encoding = {}));\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\nimport { Encoding } from \"./encoding.js\";\nexport class ByteBuffer {\n    /**\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n     */\n    constructor(bytes_) {\n        this.bytes_ = bytes_;\n        this.position_ = 0;\n        this.text_decoder_ = new TextDecoder();\n    }\n    /**\n     * Create and allocate a new ByteBuffer with a given size.\n     */\n    static allocate(byte_size) {\n        return new ByteBuffer(new Uint8Array(byte_size));\n    }\n    clear() {\n        this.position_ = 0;\n    }\n    /**\n     * Get the underlying `Uint8Array`.\n     */\n    bytes() {\n        return this.bytes_;\n    }\n    /**\n     * Get the buffer's position.\n     */\n    position() {\n        return this.position_;\n    }\n    /**\n     * Set the buffer's position.\n     */\n    setPosition(position) {\n        this.position_ = position;\n    }\n    /**\n     * Get the buffer's capacity.\n     */\n    capacity() {\n        return this.bytes_.length;\n    }\n    readInt8(offset) {\n        return this.readUint8(offset) << 24 >> 24;\n    }\n    readUint8(offset) {\n        return this.bytes_[offset];\n    }\n    readInt16(offset) {\n        return this.readUint16(offset) << 16 >> 16;\n    }\n    readUint16(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n    }\n    readInt32(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n    }\n    readUint32(offset) {\n        return this.readInt32(offset) >>> 0;\n    }\n    readInt64(offset) {\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readUint64(offset) {\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readFloat32(offset) {\n        int32[0] = this.readInt32(offset);\n        return float32[0];\n    }\n    readFloat64(offset) {\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n        return float64[0];\n    }\n    writeInt8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeUint8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeInt16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeUint16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeInt32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeUint32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeInt64(offset, value) {\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\n    }\n    writeUint64(offset, value) {\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\n    }\n    writeFloat32(offset, value) {\n        float32[0] = value;\n        this.writeInt32(offset, int32[0]);\n    }\n    writeFloat64(offset, value) {\n        float64[0] = value;\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\n    }\n    /**\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n     * schema does not include a file_identifier (likely points at padding or the\n     * start of a the root vtable).\n     */\n    getBufferIdentifier() {\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\n            FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n        }\n        let result = \"\";\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\n        }\n        return result;\n    }\n    /**\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\n     * field is not present.\n     */\n    __offset(bb_pos, vtable_offset) {\n        const vtable = bb_pos - this.readInt32(bb_pos);\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n    }\n    /**\n     * Initialize any Table-derived type to point to the union at the given offset.\n     */\n    __union(t, offset) {\n        t.bb_pos = offset + this.readInt32(offset);\n        t.bb = this;\n        return t;\n    }\n    /**\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n     * This allocates a new string and converts to wide chars upon each access.\n     *\n     * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n     * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n     * the data will just be packaged back up in another FlatBuffer later on.\n     *\n     * @param offset\n     * @param opt_encoding Defaults to UTF16_STRING\n     */\n    __string(offset, opt_encoding) {\n        offset += this.readInt32(offset);\n        const length = this.readInt32(offset);\n        offset += SIZEOF_INT;\n        const utf8bytes = this.bytes_.subarray(offset, offset + length);\n        if (opt_encoding === Encoding.UTF8_BYTES)\n            return utf8bytes;\n        else\n            return this.text_decoder_.decode(utf8bytes);\n    }\n    /**\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n     * if a string then return a new one\n     *\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n     * makes the behaviour of __union_with_string different compared to __union\n     */\n    __union_with_string(o, offset) {\n        if (typeof o === 'string') {\n            return this.__string(offset);\n        }\n        return this.__union(o, offset);\n    }\n    /**\n     * Retrieve the relative offset stored at \"offset\"\n     */\n    __indirect(offset) {\n        return offset + this.readInt32(offset);\n    }\n    /**\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector(offset) {\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\n    }\n    /**\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector_len(offset) {\n        return this.readInt32(offset + this.readInt32(offset));\n    }\n    __has_identifier(ident) {\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: file identifier must be length ' +\n                FILE_IDENTIFIER_LENGTH);\n        }\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * A helper function for generating list for obj api\n     */\n    createScalarList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val);\n            }\n        }\n        return ret;\n    }\n    /**\n     * A helper function for generating list for obj api\n     * @param listAccessor function that accepts an index and return data at that index\n     * @param listLength listLength\n     * @param res result list\n     */\n    createObjList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val.unpack());\n            }\n        }\n        return ret;\n    }\n}\n", "import { ByteBuffer } from \"./byte-buffer.js\";\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\nexport class Builder {\n    /**\n     * Create a FlatBufferBuilder.\n     */\n    constructor(opt_initial_size) {\n        /** Minimum alignment encountered so far. */\n        this.minalign = 1;\n        /** The vtable for the current table. */\n        this.vtable = null;\n        /** The amount of fields we're actually using. */\n        this.vtable_in_use = 0;\n        /** Whether we are currently serializing a table. */\n        this.isNested = false;\n        /** Starting offset of the current struct/table. */\n        this.object_start = 0;\n        /** List of offsets of all vtables. */\n        this.vtables = [];\n        /** For the current vector being built. */\n        this.vector_num_elems = 0;\n        /** False omits default values from the serialized data */\n        this.force_defaults = false;\n        this.string_maps = null;\n        this.text_encoder = new TextEncoder();\n        let initial_size;\n        if (!opt_initial_size) {\n            initial_size = 1024;\n        }\n        else {\n            initial_size = opt_initial_size;\n        }\n        /**\n         * @type {ByteBuffer}\n         * @private\n         */\n        this.bb = ByteBuffer.allocate(initial_size);\n        this.space = initial_size;\n    }\n    clear() {\n        this.bb.clear();\n        this.space = this.bb.capacity();\n        this.minalign = 1;\n        this.vtable = null;\n        this.vtable_in_use = 0;\n        this.isNested = false;\n        this.object_start = 0;\n        this.vtables = [];\n        this.vector_num_elems = 0;\n        this.force_defaults = false;\n        this.string_maps = null;\n    }\n    /**\n     * In order to save space, fields that are set to their default value\n     * don't get serialized into the buffer. Forcing defaults provides a\n     * way to manually disable this optimization.\n     *\n     * @param forceDefaults true always serializes default values\n     */\n    forceDefaults(forceDefaults) {\n        this.force_defaults = forceDefaults;\n    }\n    /**\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n     * called finish(). The actual data starts at the ByteBuffer's current position,\n     * not necessarily at 0.\n     */\n    dataBuffer() {\n        return this.bb;\n    }\n    /**\n     * Get the bytes representing the FlatBuffer. Only call this after you've\n     * called finish().\n     */\n    asUint8Array() {\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n    }\n    /**\n     * Prepare to write an element of `size` after `additional_bytes` have been\n     * written, e.g. if you write a string, you need to align such the int length\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\n     * you need to do is alignment, `additional_bytes` will be 0.\n     *\n     * @param size This is the of the new element to write\n     * @param additional_bytes The padding size\n     */\n    prep(size, additional_bytes) {\n        // Track the biggest thing we've ever aligned to.\n        if (size > this.minalign) {\n            this.minalign = size;\n        }\n        // Find the amount of alignment needed such that `size` is properly\n        // aligned after `additional_bytes`\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n        // Reallocate the buffer if needed.\n        while (this.space < align_size + size + additional_bytes) {\n            const old_buf_size = this.bb.capacity();\n            this.bb = Builder.growByteBuffer(this.bb);\n            this.space += this.bb.capacity() - old_buf_size;\n        }\n        this.pad(align_size);\n    }\n    pad(byte_size) {\n        for (let i = 0; i < byte_size; i++) {\n            this.bb.writeInt8(--this.space, 0);\n        }\n    }\n    writeInt8(value) {\n        this.bb.writeInt8(this.space -= 1, value);\n    }\n    writeInt16(value) {\n        this.bb.writeInt16(this.space -= 2, value);\n    }\n    writeInt32(value) {\n        this.bb.writeInt32(this.space -= 4, value);\n    }\n    writeInt64(value) {\n        this.bb.writeInt64(this.space -= 8, value);\n    }\n    writeFloat32(value) {\n        this.bb.writeFloat32(this.space -= 4, value);\n    }\n    writeFloat64(value) {\n        this.bb.writeFloat64(this.space -= 8, value);\n    }\n    /**\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int8` to add the buffer.\n     */\n    addInt8(value) {\n        this.prep(1, 0);\n        this.writeInt8(value);\n    }\n    /**\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int16` to add the buffer.\n     */\n    addInt16(value) {\n        this.prep(2, 0);\n        this.writeInt16(value);\n    }\n    /**\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int32` to add the buffer.\n     */\n    addInt32(value) {\n        this.prep(4, 0);\n        this.writeInt32(value);\n    }\n    /**\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int64` to add the buffer.\n     */\n    addInt64(value) {\n        this.prep(8, 0);\n        this.writeInt64(value);\n    }\n    /**\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float32` to add the buffer.\n     */\n    addFloat32(value) {\n        this.prep(4, 0);\n        this.writeFloat32(value);\n    }\n    /**\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float64` to add the buffer.\n     */\n    addFloat64(value) {\n        this.prep(8, 0);\n        this.writeFloat64(value);\n    }\n    addFieldInt8(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt8(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt16(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt16(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt64(voffset, value, defaultValue) {\n        if (this.force_defaults || value !== defaultValue) {\n            this.addInt64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat64(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldOffset(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addOffset(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n     */\n    addFieldStruct(voffset, value, defaultValue) {\n        if (value != defaultValue) {\n            this.nested(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structures are always stored inline, they need to be created right\n     * where they're used.  You'll get this assertion failure if you\n     * created it elsewhere.\n     */\n    nested(obj) {\n        if (obj != this.offset()) {\n            throw new TypeError('FlatBuffers: struct must be serialized inline.');\n        }\n    }\n    /**\n     * Should not be creating any other object, string or vector\n     * while an object is being constructed\n     */\n    notNested() {\n        if (this.isNested) {\n            throw new TypeError('FlatBuffers: object serialization must not be nested.');\n        }\n    }\n    /**\n     * Set the current vtable at `voffset` to the current location in the buffer.\n     */\n    slot(voffset) {\n        if (this.vtable !== null)\n            this.vtable[voffset] = this.offset();\n    }\n    /**\n     * @returns Offset relative to the end of the buffer.\n     */\n    offset() {\n        return this.bb.capacity() - this.space;\n    }\n    /**\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\n     * the end of the new buffer (since we build the buffer backwards).\n     *\n     * @param bb The current buffer with the existing data\n     * @returns A new byte buffer with the old data copied\n     * to it. The data is located at the end of the buffer.\n     *\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n     * it a uint8Array we need to suppress the type check:\n     * @suppress {checkTypes}\n     */\n    static growByteBuffer(bb) {\n        const old_buf_size = bb.capacity();\n        // Ensure we don't grow beyond what fits in an int.\n        if (old_buf_size & 0xC0000000) {\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n        }\n        const new_buf_size = old_buf_size << 1;\n        const nbb = ByteBuffer.allocate(new_buf_size);\n        nbb.setPosition(new_buf_size - old_buf_size);\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n        return nbb;\n    }\n    /**\n     * Adds on offset, relative to where it will be written.\n     *\n     * @param offset The offset to add.\n     */\n    addOffset(offset) {\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\n    }\n    /**\n     * Start encoding a new object in the buffer.  Users will not usually need to\n     * call this directly. The FlatBuffers compiler will generate helper methods\n     * that call this method internally.\n     */\n    startObject(numfields) {\n        this.notNested();\n        if (this.vtable == null) {\n            this.vtable = [];\n        }\n        this.vtable_in_use = numfields;\n        for (let i = 0; i < numfields; i++) {\n            this.vtable[i] = 0; // This will push additional elements as needed\n        }\n        this.isNested = true;\n        this.object_start = this.offset();\n    }\n    /**\n     * Finish off writing the object that is under construction.\n     *\n     * @returns The offset to the object inside `dataBuffer`\n     */\n    endObject() {\n        if (this.vtable == null || !this.isNested) {\n            throw new Error('FlatBuffers: endObject called without startObject');\n        }\n        this.addInt32(0);\n        const vtableloc = this.offset();\n        // Trim trailing zeroes.\n        let i = this.vtable_in_use - 1;\n        // eslint-disable-next-line no-empty\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\n        const trimmed_size = i + 1;\n        // Write out the current vtable.\n        for (; i >= 0; i--) {\n            // Offset relative to the start of the table.\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n        }\n        const standard_fields = 2; // The fields below:\n        this.addInt16(vtableloc - this.object_start);\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\n        this.addInt16(len);\n        // Search for an existing vtable that matches the current one.\n        let existing_vtable = 0;\n        const vt1 = this.space;\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\n            const vt2 = this.bb.capacity() - this.vtables[i];\n            if (len == this.bb.readInt16(vt2)) {\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n                        continue outer_loop;\n                    }\n                }\n                existing_vtable = this.vtables[i];\n                break;\n            }\n        }\n        if (existing_vtable) {\n            // Found a match:\n            // Remove the current vtable.\n            this.space = this.bb.capacity() - vtableloc;\n            // Point table to existing vtable.\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n        }\n        else {\n            // No match:\n            // Add the location of the current vtable to the list of vtables.\n            this.vtables.push(this.offset());\n            // Point table to current vtable.\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n        }\n        this.isNested = false;\n        return vtableloc;\n    }\n    /**\n     * Finalize a buffer, poiting to the given `root_table`.\n     */\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\n        if (opt_file_identifier) {\n            const file_identifier = opt_file_identifier;\n            this.prep(this.minalign, SIZEOF_INT +\n                FILE_IDENTIFIER_LENGTH + size_prefix);\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\n                throw new TypeError('FlatBuffers: file identifier must be length ' +\n                    FILE_IDENTIFIER_LENGTH);\n            }\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n                this.writeInt8(file_identifier.charCodeAt(i));\n            }\n        }\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\n        this.addOffset(root_table);\n        if (size_prefix) {\n            this.addInt32(this.bb.capacity() - this.space);\n        }\n        this.bb.setPosition(this.space);\n    }\n    /**\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\n     */\n    finishSizePrefixed(root_table, opt_file_identifier) {\n        this.finish(root_table, opt_file_identifier, true);\n    }\n    /**\n     * This checks a required field has been set in a given table that has\n     * just been constructed.\n     */\n    requiredField(table, field) {\n        const table_start = this.bb.capacity() - table;\n        const vtable_start = table_start - this.bb.readInt32(table_start);\n        const ok = field < this.bb.readInt16(vtable_start) &&\n            this.bb.readInt16(vtable_start + field) != 0;\n        // If this fails, the caller will show what field needs to be set.\n        if (!ok) {\n            throw new TypeError('FlatBuffers: field ' + field + ' must be set');\n        }\n    }\n    /**\n     * Start a new array/vector of objects.  Users usually will not call\n     * this directly. The FlatBuffers compiler will create a start/end\n     * method for vector types in generated code.\n     *\n     * @param elem_size The size of each element in the array\n     * @param num_elems The number of elements in the array\n     * @param alignment The alignment of the array\n     */\n    startVector(elem_size, num_elems, alignment) {\n        this.notNested();\n        this.vector_num_elems = num_elems;\n        this.prep(SIZEOF_INT, elem_size * num_elems);\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n    }\n    /**\n     * Finish off the creation of an array and all its elements. The array must be\n     * created with `startVector`.\n     *\n     * @returns The offset at which the newly created array\n     * starts.\n     */\n    endVector() {\n        this.writeInt32(this.vector_num_elems);\n        return this.offset();\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\n     * already been seen, we return the offset of the already written string\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createSharedString(s) {\n        if (!s) {\n            return 0;\n        }\n        if (!this.string_maps) {\n            this.string_maps = new Map();\n        }\n        if (this.string_maps.has(s)) {\n            return this.string_maps.get(s);\n        }\n        const offset = this.createString(s);\n        this.string_maps.set(s, offset);\n        return offset;\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createString(s) {\n        if (s === null || s === undefined) {\n            return 0;\n        }\n        let utf8;\n        if (s instanceof Uint8Array) {\n            utf8 = s;\n        }\n        else {\n            utf8 = this.text_encoder.encode(s);\n        }\n        this.addInt8(0);\n        this.startVector(1, utf8.length, 1);\n        this.bb.setPosition(this.space -= utf8.length);\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n            bytes[offset++] = utf8[i];\n        }\n        return this.endVector();\n    }\n    /**\n     * A helper function to pack an object\n     *\n     * @returns offset of obj\n     */\n    createObjectOffset(obj) {\n        if (obj === null) {\n            return 0;\n        }\n        if (typeof obj === 'string') {\n            return this.createString(obj);\n        }\n        else {\n            return obj.pack(this);\n        }\n    }\n    /**\n     * A helper function to pack a list of object\n     *\n     * @returns list of offsets of each non null object\n     */\n    createObjectOffsetList(list) {\n        const ret = [];\n        for (let i = 0; i < list.length; ++i) {\n            const val = list[i];\n            if (val !== null) {\n                ret.push(this.createObjectOffset(val));\n            }\n            else {\n                throw new TypeError('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\n            }\n        }\n        return ret;\n    }\n    createStructOffsetList(list, startFunc) {\n        startFunc(this, list.length);\n        this.createObjectOffsetList(list.slice().reverse());\n        return this.endVector();\n    }\n}\n", "export { SIZEOF_SHORT } from './constants.js';\nexport { SIZEOF_INT } from './constants.js';\nexport { FILE_IDENTIFIER_LENGTH } from './constants.js';\nexport { SIZE_PREFIX_LENGTH } from './constants.js';\nexport { int32, float32, float64, isLittleEndian } from './utils.js';\nexport { Encoding } from './encoding.js';\nexport { Builder } from './builder.js';\nexport { ByteBuffer } from './byte-buffer.js';\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Model = void 0;\nvar Model;\n(function (Model) {\n    Model[Model[\"undefined\"] = 0] = \"undefined\";\n    Model[Model[\"best_match\"] = 1] = \"best_match\";\n    Model[Model[\"gfs_seamless\"] = 2] = \"gfs_seamless\";\n    Model[Model[\"gfs_global\"] = 3] = \"gfs_global\";\n    Model[Model[\"gfs_hrrr\"] = 4] = \"gfs_hrrr\";\n    Model[Model[\"meteofrance_seamless\"] = 5] = \"meteofrance_seamless\";\n    Model[Model[\"meteofrance_arpege_seamless\"] = 6] = \"meteofrance_arpege_seamless\";\n    Model[Model[\"meteofrance_arpege_world\"] = 7] = \"meteofrance_arpege_world\";\n    Model[Model[\"meteofrance_arpege_europe\"] = 8] = \"meteofrance_arpege_europe\";\n    Model[Model[\"meteofrance_arome_seamless\"] = 9] = \"meteofrance_arome_seamless\";\n    Model[Model[\"meteofrance_arome_france\"] = 10] = \"meteofrance_arome_france\";\n    Model[Model[\"meteofrance_arome_france_hd\"] = 11] = \"meteofrance_arome_france_hd\";\n    Model[Model[\"jma_seamless\"] = 12] = \"jma_seamless\";\n    Model[Model[\"jma_msm\"] = 13] = \"jma_msm\";\n    Model[Model[\"jms_gsm\"] = 14] = \"jms_gsm\";\n    Model[Model[\"jma_gsm\"] = 15] = \"jma_gsm\";\n    Model[Model[\"gem_seamless\"] = 16] = \"gem_seamless\";\n    Model[Model[\"gem_global\"] = 17] = \"gem_global\";\n    Model[Model[\"gem_regional\"] = 18] = \"gem_regional\";\n    Model[Model[\"gem_hrdps_continental\"] = 19] = \"gem_hrdps_continental\";\n    Model[Model[\"icon_seamless\"] = 20] = \"icon_seamless\";\n    Model[Model[\"icon_global\"] = 21] = \"icon_global\";\n    Model[Model[\"icon_eu\"] = 22] = \"icon_eu\";\n    Model[Model[\"icon_d2\"] = 23] = \"icon_d2\";\n    Model[Model[\"ecmwf_ifs04\"] = 24] = \"ecmwf_ifs04\";\n    Model[Model[\"metno_nordic\"] = 25] = \"metno_nordic\";\n    Model[Model[\"era5_seamless\"] = 26] = \"era5_seamless\";\n    Model[Model[\"era5\"] = 27] = \"era5\";\n    Model[Model[\"cerra\"] = 28] = \"cerra\";\n    Model[Model[\"era5_land\"] = 29] = \"era5_land\";\n    Model[Model[\"ecmwf_ifs\"] = 30] = \"ecmwf_ifs\";\n    Model[Model[\"gwam\"] = 31] = \"gwam\";\n    Model[Model[\"ewam\"] = 32] = \"ewam\";\n    Model[Model[\"glofas_seamless_v3\"] = 33] = \"glofas_seamless_v3\";\n    Model[Model[\"glofas_forecast_v3\"] = 34] = \"glofas_forecast_v3\";\n    Model[Model[\"glofas_consolidated_v3\"] = 35] = \"glofas_consolidated_v3\";\n    Model[Model[\"glofas_seamless_v4\"] = 36] = \"glofas_seamless_v4\";\n    Model[Model[\"glofas_forecast_v4\"] = 37] = \"glofas_forecast_v4\";\n    Model[Model[\"glofas_consolidated_v4\"] = 38] = \"glofas_consolidated_v4\";\n    Model[Model[\"gfs025\"] = 39] = \"gfs025\";\n    Model[Model[\"gfs05\"] = 40] = \"gfs05\";\n    Model[Model[\"CMCC_CM2_VHR4\"] = 41] = \"CMCC_CM2_VHR4\";\n    Model[Model[\"FGOALS_f3_H_highresSST\"] = 42] = \"FGOALS_f3_H_highresSST\";\n    Model[Model[\"FGOALS_f3_H\"] = 43] = \"FGOALS_f3_H\";\n    Model[Model[\"HiRAM_SIT_HR\"] = 44] = \"HiRAM_SIT_HR\";\n    Model[Model[\"MRI_AGCM3_2_S\"] = 45] = \"MRI_AGCM3_2_S\";\n    Model[Model[\"EC_Earth3P_HR\"] = 46] = \"EC_Earth3P_HR\";\n    Model[Model[\"MPI_ESM1_2_XR\"] = 47] = \"MPI_ESM1_2_XR\";\n    Model[Model[\"NICAM16_8S\"] = 48] = \"NICAM16_8S\";\n    Model[Model[\"cams_europe\"] = 49] = \"cams_europe\";\n    Model[Model[\"cams_global\"] = 50] = \"cams_global\";\n    Model[Model[\"cfsv2\"] = 51] = \"cfsv2\";\n    Model[Model[\"era5_ocean\"] = 52] = \"era5_ocean\";\n    Model[Model[\"cma_grapes_global\"] = 53] = \"cma_grapes_global\";\n    Model[Model[\"bom_access_global\"] = 54] = \"bom_access_global\";\n    Model[Model[\"bom_access_global_ensemble\"] = 55] = \"bom_access_global_ensemble\";\n    Model[Model[\"arpae_cosmo_seamless\"] = 56] = \"arpae_cosmo_seamless\";\n    Model[Model[\"arpae_cosmo_2i\"] = 57] = \"arpae_cosmo_2i\";\n    Model[Model[\"arpae_cosmo_2i_ruc\"] = 58] = \"arpae_cosmo_2i_ruc\";\n    Model[Model[\"arpae_cosmo_5m\"] = 59] = \"arpae_cosmo_5m\";\n    Model[Model[\"ecmwf_ifs025\"] = 60] = \"ecmwf_ifs025\";\n})(Model || (exports.Model = Model = {}));\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Aggregation = void 0;\nvar Aggregation;\n(function (Aggregation) {\n    Aggregation[Aggregation[\"none\"] = 0] = \"none\";\n    Aggregation[Aggregation[\"minimum\"] = 1] = \"minimum\";\n    Aggregation[Aggregation[\"maximum\"] = 2] = \"maximum\";\n    Aggregation[Aggregation[\"mean\"] = 3] = \"mean\";\n    Aggregation[Aggregation[\"p10\"] = 4] = \"p10\";\n    Aggregation[Aggregation[\"p25\"] = 5] = \"p25\";\n    Aggregation[Aggregation[\"median\"] = 6] = \"median\";\n    Aggregation[Aggregation[\"p75\"] = 7] = \"p75\";\n    Aggregation[Aggregation[\"p90\"] = 8] = \"p90\";\n    Aggregation[Aggregation[\"dominant\"] = 9] = \"dominant\";\n    Aggregation[Aggregation[\"sum\"] = 10] = \"sum\";\n})(Aggregation || (exports.Aggregation = Aggregation = {}));\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Unit = void 0;\nvar Unit;\n(function (Unit) {\n    Unit[Unit[\"undefined\"] = 0] = \"undefined\";\n    Unit[Unit[\"celsius\"] = 1] = \"celsius\";\n    Unit[Unit[\"centimetre\"] = 2] = \"centimetre\";\n    Unit[Unit[\"cubic_metre_per_cubic_metre\"] = 3] = \"cubic_metre_per_cubic_metre\";\n    Unit[Unit[\"cubic_metre_per_second\"] = 4] = \"cubic_metre_per_second\";\n    Unit[Unit[\"degree_direction\"] = 5] = \"degree_direction\";\n    Unit[Unit[\"dimensionless_integer\"] = 6] = \"dimensionless_integer\";\n    Unit[Unit[\"dimensionless\"] = 7] = \"dimensionless\";\n    Unit[Unit[\"european_air_quality_index\"] = 8] = \"european_air_quality_index\";\n    Unit[Unit[\"fahrenheit\"] = 9] = \"fahrenheit\";\n    Unit[Unit[\"feet\"] = 10] = \"feet\";\n    Unit[Unit[\"fraction\"] = 11] = \"fraction\";\n    Unit[Unit[\"gdd_celsius\"] = 12] = \"gdd_celsius\";\n    Unit[Unit[\"geopotential_metre\"] = 13] = \"geopotential_metre\";\n    Unit[Unit[\"grains_per_cubic_metre\"] = 14] = \"grains_per_cubic_metre\";\n    Unit[Unit[\"gram_per_kilogram\"] = 15] = \"gram_per_kilogram\";\n    Unit[Unit[\"hectopascal\"] = 16] = \"hectopascal\";\n    Unit[Unit[\"hours\"] = 17] = \"hours\";\n    Unit[Unit[\"inch\"] = 18] = \"inch\";\n    Unit[Unit[\"iso8601\"] = 19] = \"iso8601\";\n    Unit[Unit[\"joule_per_kilogram\"] = 20] = \"joule_per_kilogram\";\n    Unit[Unit[\"kelvin\"] = 21] = \"kelvin\";\n    Unit[Unit[\"kilopascal\"] = 22] = \"kilopascal\";\n    Unit[Unit[\"kilogram_per_square_metre\"] = 23] = \"kilogram_per_square_metre\";\n    Unit[Unit[\"kilometres_per_hour\"] = 24] = \"kilometres_per_hour\";\n    Unit[Unit[\"knots\"] = 25] = \"knots\";\n    Unit[Unit[\"megajoule_per_square_metre\"] = 26] = \"megajoule_per_square_metre\";\n    Unit[Unit[\"metre_per_second_not_unit_converted\"] = 27] = \"metre_per_second_not_unit_converted\";\n    Unit[Unit[\"metre_per_second\"] = 28] = \"metre_per_second\";\n    Unit[Unit[\"metre\"] = 29] = \"metre\";\n    Unit[Unit[\"micrograms_per_cubic_metre\"] = 30] = \"micrograms_per_cubic_metre\";\n    Unit[Unit[\"miles_per_hour\"] = 31] = \"miles_per_hour\";\n    Unit[Unit[\"millimetre\"] = 32] = \"millimetre\";\n    Unit[Unit[\"pascal\"] = 33] = \"pascal\";\n    Unit[Unit[\"per_second\"] = 34] = \"per_second\";\n    Unit[Unit[\"percentage\"] = 35] = \"percentage\";\n    Unit[Unit[\"seconds\"] = 36] = \"seconds\";\n    Unit[Unit[\"unix_time\"] = 37] = \"unix_time\";\n    Unit[Unit[\"us_air_quality_index\"] = 38] = \"us_air_quality_index\";\n    Unit[Unit[\"watt_per_square_metre\"] = 39] = \"watt_per_square_metre\";\n    Unit[Unit[\"wmo_code\"] = 40] = \"wmo_code\";\n})(Unit || (exports.Unit = Unit = {}));\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\nvar Variable;\n(function (Variable) {\n    Variable[Variable[\"undefined\"] = 0] = \"undefined\";\n    Variable[Variable[\"apparent_temperature\"] = 1] = \"apparent_temperature\";\n    Variable[Variable[\"cape\"] = 2] = \"cape\";\n    Variable[Variable[\"cloud_cover\"] = 3] = \"cloud_cover\";\n    Variable[Variable[\"cloud_cover_high\"] = 4] = \"cloud_cover_high\";\n    Variable[Variable[\"cloud_cover_low\"] = 5] = \"cloud_cover_low\";\n    Variable[Variable[\"cloud_cover_mid\"] = 6] = \"cloud_cover_mid\";\n    Variable[Variable[\"daylight_duration\"] = 7] = \"daylight_duration\";\n    Variable[Variable[\"dew_point\"] = 8] = \"dew_point\";\n    Variable[Variable[\"diffuse_radiation\"] = 9] = \"diffuse_radiation\";\n    Variable[Variable[\"diffuse_radiation_instant\"] = 10] = \"diffuse_radiation_instant\";\n    Variable[Variable[\"direct_normal_irradiance\"] = 11] = \"direct_normal_irradiance\";\n    Variable[Variable[\"direct_normal_irradiance_instant\"] = 12] = \"direct_normal_irradiance_instant\";\n    Variable[Variable[\"direct_radiation\"] = 13] = \"direct_radiation\";\n    Variable[Variable[\"direct_radiation_instant\"] = 14] = \"direct_radiation_instant\";\n    Variable[Variable[\"et0_fao_evapotranspiration\"] = 15] = \"et0_fao_evapotranspiration\";\n    Variable[Variable[\"evapotranspiration\"] = 16] = \"evapotranspiration\";\n    Variable[Variable[\"freezing_level_height\"] = 17] = \"freezing_level_height\";\n    Variable[Variable[\"growing_degree_days\"] = 18] = \"growing_degree_days\";\n    Variable[Variable[\"is_day\"] = 19] = \"is_day\";\n    Variable[Variable[\"latent_heat_flux\"] = 20] = \"latent_heat_flux\";\n    Variable[Variable[\"leaf_wetness_probability\"] = 21] = \"leaf_wetness_probability\";\n    Variable[Variable[\"lifted_index\"] = 22] = \"lifted_index\";\n    Variable[Variable[\"lightning_potential\"] = 23] = \"lightning_potential\";\n    Variable[Variable[\"precipitation\"] = 24] = \"precipitation\";\n    Variable[Variable[\"precipitation_hours\"] = 25] = \"precipitation_hours\";\n    Variable[Variable[\"precipitation_probability\"] = 26] = \"precipitation_probability\";\n    Variable[Variable[\"pressure_msl\"] = 27] = \"pressure_msl\";\n    Variable[Variable[\"rain\"] = 28] = \"rain\";\n    Variable[Variable[\"relative_humidity\"] = 29] = \"relative_humidity\";\n    Variable[Variable[\"runoff\"] = 30] = \"runoff\";\n    Variable[Variable[\"sensible_heat_flux\"] = 31] = \"sensible_heat_flux\";\n    Variable[Variable[\"shortwave_radiation\"] = 32] = \"shortwave_radiation\";\n    Variable[Variable[\"shortwave_radiation_instant\"] = 33] = \"shortwave_radiation_instant\";\n    Variable[Variable[\"showers\"] = 34] = \"showers\";\n    Variable[Variable[\"snow_depth\"] = 35] = \"snow_depth\";\n    Variable[Variable[\"snow_height\"] = 36] = \"snow_height\";\n    Variable[Variable[\"snowfall\"] = 37] = \"snowfall\";\n    Variable[Variable[\"snowfall_height\"] = 38] = \"snowfall_height\";\n    Variable[Variable[\"snowfall_water_equivalent\"] = 39] = \"snowfall_water_equivalent\";\n    Variable[Variable[\"sunrise\"] = 40] = \"sunrise\";\n    Variable[Variable[\"sunset\"] = 41] = \"sunset\";\n    Variable[Variable[\"soil_moisture\"] = 42] = \"soil_moisture\";\n    Variable[Variable[\"soil_moisture_index\"] = 43] = \"soil_moisture_index\";\n    Variable[Variable[\"soil_temperature\"] = 44] = \"soil_temperature\";\n    Variable[Variable[\"surface_pressure\"] = 45] = \"surface_pressure\";\n    Variable[Variable[\"surface_temperature\"] = 46] = \"surface_temperature\";\n    Variable[Variable[\"temperature\"] = 47] = \"temperature\";\n    Variable[Variable[\"terrestrial_radiation\"] = 48] = \"terrestrial_radiation\";\n    Variable[Variable[\"terrestrial_radiation_instant\"] = 49] = \"terrestrial_radiation_instant\";\n    Variable[Variable[\"total_column_integrated_water_vapour\"] = 50] = \"total_column_integrated_water_vapour\";\n    Variable[Variable[\"updraft\"] = 51] = \"updraft\";\n    Variable[Variable[\"uv_index\"] = 52] = \"uv_index\";\n    Variable[Variable[\"uv_index_clear_sky\"] = 53] = \"uv_index_clear_sky\";\n    Variable[Variable[\"vapour_pressure_deficit\"] = 54] = \"vapour_pressure_deficit\";\n    Variable[Variable[\"visibility\"] = 55] = \"visibility\";\n    Variable[Variable[\"weather_code\"] = 56] = \"weather_code\";\n    Variable[Variable[\"wind_direction\"] = 57] = \"wind_direction\";\n    Variable[Variable[\"wind_gusts\"] = 58] = \"wind_gusts\";\n    Variable[Variable[\"wind_speed\"] = 59] = \"wind_speed\";\n    Variable[Variable[\"vertical_velocity\"] = 60] = \"vertical_velocity\";\n    Variable[Variable[\"geopotential_height\"] = 61] = \"geopotential_height\";\n    Variable[Variable[\"wet_bulb_temperature\"] = 62] = \"wet_bulb_temperature\";\n    Variable[Variable[\"river_discharge\"] = 63] = \"river_discharge\";\n    Variable[Variable[\"wave_height\"] = 64] = \"wave_height\";\n    Variable[Variable[\"wave_period\"] = 65] = \"wave_period\";\n    Variable[Variable[\"wave_direction\"] = 66] = \"wave_direction\";\n    Variable[Variable[\"wind_wave_height\"] = 67] = \"wind_wave_height\";\n    Variable[Variable[\"wind_wave_period\"] = 68] = \"wind_wave_period\";\n    Variable[Variable[\"wind_wave_peak_period\"] = 69] = \"wind_wave_peak_period\";\n    Variable[Variable[\"wind_wave_direction\"] = 70] = \"wind_wave_direction\";\n    Variable[Variable[\"swell_wave_height\"] = 71] = \"swell_wave_height\";\n    Variable[Variable[\"swell_wave_period\"] = 72] = \"swell_wave_period\";\n    Variable[Variable[\"swell_wave_peak_period\"] = 73] = \"swell_wave_peak_period\";\n    Variable[Variable[\"swell_wave_direction\"] = 74] = \"swell_wave_direction\";\n    Variable[Variable[\"pm10\"] = 75] = \"pm10\";\n    Variable[Variable[\"pm2p5\"] = 76] = \"pm2p5\";\n    Variable[Variable[\"dust\"] = 77] = \"dust\";\n    Variable[Variable[\"aerosol_optical_depth\"] = 78] = \"aerosol_optical_depth\";\n    Variable[Variable[\"carbon_monoxide\"] = 79] = \"carbon_monoxide\";\n    Variable[Variable[\"nitrogen_dioxide\"] = 80] = \"nitrogen_dioxide\";\n    Variable[Variable[\"ammonia\"] = 81] = \"ammonia\";\n    Variable[Variable[\"ozone\"] = 82] = \"ozone\";\n    Variable[Variable[\"sulphur_dioxide\"] = 83] = \"sulphur_dioxide\";\n    Variable[Variable[\"alder_pollen\"] = 84] = \"alder_pollen\";\n    Variable[Variable[\"birch_pollen\"] = 85] = \"birch_pollen\";\n    Variable[Variable[\"grass_pollen\"] = 86] = \"grass_pollen\";\n    Variable[Variable[\"mugwort_pollen\"] = 87] = \"mugwort_pollen\";\n    Variable[Variable[\"olive_pollen\"] = 88] = \"olive_pollen\";\n    Variable[Variable[\"ragweed_pollen\"] = 89] = \"ragweed_pollen\";\n    Variable[Variable[\"european_aqi\"] = 90] = \"european_aqi\";\n    Variable[Variable[\"european_aqi_pm2p5\"] = 91] = \"european_aqi_pm2p5\";\n    Variable[Variable[\"european_aqi_pm10\"] = 92] = \"european_aqi_pm10\";\n    Variable[Variable[\"european_aqi_nitrogen_dioxide\"] = 93] = \"european_aqi_nitrogen_dioxide\";\n    Variable[Variable[\"european_aqi_ozone\"] = 94] = \"european_aqi_ozone\";\n    Variable[Variable[\"european_aqi_sulphur_dioxide\"] = 95] = \"european_aqi_sulphur_dioxide\";\n    Variable[Variable[\"us_aqi\"] = 96] = \"us_aqi\";\n    Variable[Variable[\"us_aqi_pm2p5\"] = 97] = \"us_aqi_pm2p5\";\n    Variable[Variable[\"us_aqi_pm10\"] = 98] = \"us_aqi_pm10\";\n    Variable[Variable[\"us_aqi_nitrogen_dioxide\"] = 99] = \"us_aqi_nitrogen_dioxide\";\n    Variable[Variable[\"us_aqi_ozone\"] = 100] = \"us_aqi_ozone\";\n    Variable[Variable[\"us_aqi_sulphur_dioxide\"] = 101] = \"us_aqi_sulphur_dioxide\";\n    Variable[Variable[\"us_aqi_carbon_monoxide\"] = 102] = \"us_aqi_carbon_monoxide\";\n    Variable[Variable[\"sunshine_duration\"] = 103] = \"sunshine_duration\";\n    Variable[Variable[\"convective_inhibition\"] = 104] = \"convective_inhibition\";\n    Variable[Variable[\"shortwave_radiation_clear_sky\"] = 105] = \"shortwave_radiation_clear_sky\";\n    Variable[Variable[\"global_tilted_irradiance\"] = 106] = \"global_tilted_irradiance\";\n    Variable[Variable[\"global_tilted_irradiance_instant\"] = 107] = \"global_tilted_irradiance_instant\";\n})(Variable || (exports.Variable = Variable = {}));\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VariableWithValues = void 0;\nconst flatbuffers = __importStar(require(\"flatbuffers\"));\nconst aggregation_js_1 = require(\"./aggregation.js\");\nconst unit_js_1 = require(\"./unit.js\");\nconst variable_js_1 = require(\"./variable.js\");\nclass VariableWithValues {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsVariableWithValues(bb, obj) {\n        return (obj || new VariableWithValues()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsVariableWithValues(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new VariableWithValues()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    variable() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : variable_js_1.Variable.undefined;\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : unit_js_1.Unit.undefined;\n    }\n    value() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n    values(index) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n    valuesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    valuesArray() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n    }\n    valuesInt64(index) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : BigInt(0);\n    }\n    valuesInt64Length() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    altitude() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n    aggregation() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : aggregation_js_1.Aggregation.none;\n    }\n    pressureLevel() {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n    depth() {\n        const offset = this.bb.__offset(this.bb_pos, 20);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n    depthTo() {\n        const offset = this.bb.__offset(this.bb_pos, 22);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n    ensembleMember() {\n        const offset = this.bb.__offset(this.bb_pos, 24);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n    previousDay() {\n        const offset = this.bb.__offset(this.bb_pos, 26);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n}\nexports.VariableWithValues = VariableWithValues;\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VariablesWithTime = void 0;\nconst flatbuffers = __importStar(require(\"flatbuffers\"));\nconst variable_with_values_js_1 = require(\"./variable-with-values.js\");\nclass VariablesWithTime {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsVariablesWithTime(bb, obj) {\n        return (obj || new VariablesWithTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsVariablesWithTime(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new VariablesWithTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    time() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    timeEnd() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    interval() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    variables(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new variable_with_values_js_1.VariableWithValues()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    variablesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n}\nexports.VariablesWithTime = VariablesWithTime;\n", "\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeatherApiResponse = void 0;\nconst flatbuffers = __importStar(require(\"flatbuffers\"));\nconst model_js_1 = require(\"./model.js\");\nconst variables_with_time_js_1 = require(\"./variables-with-time.js\");\nclass WeatherApiResponse {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsWeatherApiResponse(bb, obj) {\n        return (obj || new WeatherApiResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsWeatherApiResponse(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new WeatherApiResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    latitude() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n    longitude() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n    elevation() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n    generationTimeMilliseconds() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n    locationId() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    model() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : model_js_1.Model.undefined;\n    }\n    utcOffsetSeconds() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    timezone(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    timezoneAbbreviation(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 20);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    current(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 22);\n        return offset ? (obj || new variables_with_time_js_1.VariablesWithTime()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    daily(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 24);\n        return offset ? (obj || new variables_with_time_js_1.VariablesWithTime()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    hourly(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 26);\n        return offset ? (obj || new variables_with_time_js_1.VariablesWithTime()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    minutely15(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 28);\n        return offset ? (obj || new variables_with_time_js_1.VariablesWithTime()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    sixHourly(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 30);\n        return offset ? (obj || new variables_with_time_js_1.VariablesWithTime()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n}\nexports.WeatherApiResponse = WeatherApiResponse;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchWeatherApi = void 0;\nconst flatbuffers_1 = require(\"flatbuffers\");\nconst weather_api_response_1 = require(\"@openmeteo/sdk/weather-api-response\");\nconst sleep = (ms) => new Promise(r => setTimeout(r, ms));\nfunction fetchRetried(url, retries = 3, backoffFactor = 0.5, backoffMax = 2) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const statusToRetry = [500, 502, 504];\n        const statusWithJsonError = [400, 429];\n        let currentTry = 0;\n        let response = yield fetch(url);\n        while (statusToRetry.includes(response.status)) {\n            currentTry++;\n            if (currentTry >= retries) {\n                throw new Error(response.statusText);\n            }\n            const sleepMs = Math.min(backoffFactor * Math.pow(2, currentTry), backoffMax) * 1000;\n            yield sleep(sleepMs);\n            response = yield fetch(url);\n        }\n        if (statusWithJsonError.includes(response.status)) {\n            const json = yield response.json();\n            if ('reason' in json) {\n                throw new Error(json.reason);\n            }\n            throw new Error(response.statusText);\n        }\n        return response;\n    });\n}\n/**\n * Retrieve data from the Open-Meteo weather API\n *\n * @param {string} url Server and endpoint. E.g. \"https://api.open-meteo.com/v1/forecast\"\n * @param {any} params URL parameter as an object\n * @param {number} [retries=3] Number of retries in case of an server error\n * @param {number} [backoffFactor=0.2] Exponential backoff factor to increase wait time after each retry\n * @param {number} [backoffMax=2] Maximum wait time between retries\n * @returns {Promise<WeatherApiResponse[]>}\n */\nfunction fetchWeatherApi(url, params, retries = 3, backoffFactor = 0.2, backoffMax = 2) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlParams = new URLSearchParams(params);\n        urlParams.set('format', 'flatbuffers');\n        const response = yield fetchRetried(`${url}?${urlParams.toString()}`, retries, backoffFactor, backoffMax);\n        const fb = new flatbuffers_1.ByteBuffer(new Uint8Array(yield response.arrayBuffer()));\n        const results = [];\n        let pos = 0;\n        while (pos < fb.capacity()) {\n            fb.setPosition(pos);\n            const len = fb.readInt32(fb.position());\n            results.push(weather_api_response_1.WeatherApiResponse.getSizePrefixedRootAsWeatherApiResponse(fb));\n            pos += len + 4;\n        }\n        return results;\n    });\n}\nexports.fetchWeatherApi = fetchWeatherApi;\n"],
  "mappings": "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",
  "names": ["Encoding", "Model", "Aggregation", "Unit", "Variable"]
}
